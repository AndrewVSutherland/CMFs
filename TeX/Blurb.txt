Extent and size

Rather than choosing boxes based on level N and weight k we organize by Nk², which is asymptotically proportional to the analytic conductor (which is a good measure of the complexity of a newform).  Our tabulation is complete within the following ranges
Nk² ≤ 4000
Nk² ≤ 40000, χ=1
Nk² ≤ 40000, N ≤ 24
Nk² ≤ 14400, N ≤ 100, *k* ≤ 12
Nk² ≤ 100000, N ≤ 10
Nk² ≤ 40000, k > 1, dimension ≤ 50
These boxes were chosen to include everything currently in the LMFDB and other existing tables of modular forms.

Counts
338,551 newspaces S_k(N, χ) (50,098 nonzero)
281,219 Galois orbits of newforms (48,688 with rational coefficients, 19,306 of weight 1)
14,398,359 complex embedded newforms
14,396,948 degree 2 L-functions
195,163 L-functions of Galois orbits
We have not (yet) computed L-functions for the 1411 complex embedded newforms that lie in the 80 Galois orbits of newforms of weight k > 200.  This explains the discrepancy embedded newforms and L-function counts.

Database size
325 GiB of embedded modular forms (q-expansions in C)
123 GiB of trace data (traces of q-expansions down to Q)
2 GiB of exact q-expansion data (when dim <= 20)
Source of the data

We spent 50-100 CPU years this fall and winter computing the above data using a combination of Magma, Pari/GP, and complex analytic data with rigorous precision computed by Johnathan Bober.  See the source page for further details.

Code changes

We made numerous changes and improvements to the LMFDB codebase as we added the data, both to the classical modular form code and the overall infrastructure.  The PR includes 362 changed files with 21,560 additions and 16,267 deletions.

Representation

Exact coefficients are stored using either a sparse cyclotomic representation (example) or in terms of an LLL-reduced basis for the coefficient ring (example).  We have exact coefficients in weight 1 or if the dimension is at most 20.

We compute complex q-expansions for all embeddings into the complex numbers, even when the dimension is large (example).

Reliability

Many computations were duplicated in Magma and Pari, providing a check for their correctness.  We also compared with complex analytic data independently computed by Jon Bober, with William Stein's modular form tables and Alan Lauder and Kevin Buzzard's weight 1 tables.  Finally, we  have written a verification module for the LMFDB that allows us to create automated consistency checks on the data; we created over 250 tests for our modular forms data that can be rerun any time the data is updated.  See the reliability page for more details.

User interface

We have rewritten the front end to the modular forms section of the LMFDB.  These changes include a number of new features that we have implemented generically so that they can be easily replicated in other sections of the LMFDB in the future.

Searches 
You can obtain a list of newforms or a list of newspaces satisfying various constraints (rational newforms for example).
You can view dimension tables of newforms as well as dimension tables of newspaces. organized by level N and weight k.  You can add constraints and change the ranges of N and k displayed.
You can browse newforms and browse newspaces using a searchable table of traces listed both as integers and modulo a chosen prime p. 
You can select a random form satisfying specified constraints (for example, a random CM form whose level is a power of 2).
Search results for newspaces include decomposition into newforms and into Atkin-Lehner eigenspaces.
Statistics

You can browse tables of precomputed statistics,  as well as a new dynamic statistics feature that allows you to create your statistics, for example, showing the distribution of weight and levels for CM newforms.

Downloads

Downloads are now more broadly available, and you can download various things from homepages (trace forms, q-expansions, all stored data) and from search results.  For each newform of dimension at most 20 we provide a list of Hecke operators whose kernels uniquely determine the newform (this can sometimes speed up construction of the newform in systems like Magma, and also provides a way to uniquely identify it).

Newform homepages
We have tried to make q-expansions more readable by optimizing the representation. Defaults to showing 10 coefficients, expandable to 100 coefficients on the page, 1000+ coefficients available for download.
Trace expansions are also shown, even when the dimension is large (example).
We include projective image information for weight 1 forms, including A4, S4, A5, D2, ..., D285.
Weight 1 forms are matched with their corresponding Artin representations when they are present in the LMFDB (we hope to eventually add matching Artin representations for all weight one newforms).
We list analytic ranks (proved in almost all cases, always an upper bound) (for example a newform of weight 14 with analytic rank 1).
We include CM/RM fields for newforms with self twists.
We list inner twists for newforms (twists in the same Galois orbit).
For newforms with exact algebraic q-expansions, we provide the values of the character as elements of the coefficient ring in our optimized representation.
We have portraits for both newforms and newspaces, giving plots of the trace form on the Poincare disc.
We we have changed the label scheme to reflect our organization of modular forms into Galois orbits but we maintain backward compatibility with old labels.
Embedded newform homepages
There are now homepages for newforms equipped with an embedding of the coefficient field into the complex numbers.  They are linked to from the tables of embeddings on each newform page.
q-expansions are shown with complex coefficients, we include links to the dual form (complex conjugate).
Coefficients (in both arithmetic and analytic normalizations) and Satake angles are viewable up through n=1000, with more sometimes available for download in high level.
Space homepages
We give decompositions of each newsapce into newforms and the decompostion into new and old spaces.
We list dimensions for new and old, Eisenstein and cuspidal subspaces.
We show the trace form for each space (sum of all newforms) for every newspace of level up to 4000 (even when we have not computed the newforms in the space).
We give bounds on how many q-expansion coefficients are needed to distinguish newforms within a space.  In addition to the standard Sturm bound, we also provide a computed trace bound based on the newforms that actually occur.
L-functions
For each complex embedding of a newform with weight at most 200, we have precomputed L-function data and. both arithmetic and analytic normalizations are now available.
We have computed analytic ranks for each L-function (these are upper bounds that in most cases are proved to be tight).
We list Euler factors at primes up to 100.
Zeros on critical line have more precision and are stored in the database rather than computed on the fly, making it easier to find connections to other objects in the LMFDB
We have changed the labeling scheme for modular form L-functions, but we support old labels.
Experimental features

We have used classical modular forms as a testing ground for some new features which are applicable to other areas of the LMFDB.
There is now a verification module to add consistency checks for data in Postgres; you can access it by from lmfdb.verify import db and then running either db.verify or db.tablename.verify.  See the Postgres_FAQ for more details.
The dynamic statistics feature mentioned above.
A variant on knowls used when displaying very long mathematical content.  You can see the results in the *q*-expansions, basis descriptions, coefficient fields and Hecke kernels for some high weight newforms and in various other places on classical modular form pages.
Some nice features for 2-d tables, such as sticky headers and rotated labels.
You can now change the sort order on search results.
The ability to get a random object satisfying search constraints (mentioned above).
Multiple search result views (e.g. trace tables and dimension tables).
There is more modularity in the templates, allowing the same search interface to be used on multiple pages
MongoDB to Postgres

While working on classical modular forms, we've fixed various issues with the transition from MongoDB to Postgres, and eliminated the last dependencies on MongoDB.  One interface change to be aware of is that one now uses "from lmfdb import db" to access the database object, rather than "from lmfdb.db_backend import db".


-- 
You received this message because you are subscribed to the Google Groups "lmdb" group.
To unsubscribe from this group and stop receiving emails from it, send an email to lmdb+unsubscribe@googlegroups.com.
To post to this group, send email to lmdb@googlegroups.com.
Visit this group at https://groups.google.com/group/lmdb.
For more options, visit https://groups.google.com/d/optout.
